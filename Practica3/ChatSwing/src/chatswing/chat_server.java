/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatswing;

import static chatswing.Server.clients;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;

/**
 *
 * @author Meritxell <meritxell.org>
 */
public class chat_server extends javax.swing.JFrame {

    /**
     * Creates new form chat_server
     */
    public static HashMap<String, chat_server.User> clients = new HashMap<>();
    static MyServerSocket ss;
    static MySocket s;
    //static DataInputStream din;
    //static DataOutputStream dout;
    static BufferedReader br;
    static PrintWriter pw;

    public chat_server() {
        System.out.println("Servidor");
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        button_send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("Server");

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        msg_text.setText("...");
        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });

        button_send.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        button_send.setText("Send");
        button_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(175, 175, 175))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button_send, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_send, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(msg_text))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msg_textActionPerformed

    private void button_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sendActionPerformed
        // TODO add your handling code here:
        try {
            String msgout = "";
            msgout = msg_text.getText().trim();
            pw.println(msgout);
            pw.flush();
            System.out.println("Msgout, server: " + msgout);
            //dout.writeUTF(msgout);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_button_sendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chat_server().setVisible(true);
            }
        });

        String msgin = "";
        try {
            ss = new MyServerSocket(5000);
            while (true) {
                System.out.println("procedim a acceptar un nou client");
                new Thread(new chat_server.User(ss.accept())).start();
            }
            //din= new DataInputStream(s.getInputStream());
            //dout = new DataOutputStream(s.getOutputStream());
            /*while (!msgin.equals("exit")) {
                msgin = br.readLine();
                System.out.println("NO ARRIBAMsgin, client: " + msgin);

                //magin = din.readUTF();
                msg_area.setText(msg_area.getText().trim() + "\n" + msgin);

            }*/

        } catch (Exception e) {

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_send;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JTextField msg_text;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private static class User implements Runnable {

        private final MySocket socket;
        private String lastMsg = "";
        private String clientName = "";
        public BufferedReader br = null;
        public PrintWriter pw = null;
        public boolean login;

        public User(MySocket ms) {
            this.socket = ms;
            this.br = new BufferedReader(new InputStreamReader(this.socket.myGetInputStream()));
            this.pw = new PrintWriter(this.socket.myGetOutputStream(), true);
            login = false;
        }

        @Override
        public void run() {
            boolean sortir = false;

            while (login) {
                try {
                    this.clientName = br.readLine();
                    if (this.clientName.length()>1) {
                        this.login = true;
                        System.out.println("S'ha acabat login en el server" + this.clientName);
                    }
                } catch (Exception e) {

                }
            }
                System.out.println("sortim del while login" + this.clientName);

            clients.put(this.clientName, this);
            System.out.println("s'ha afegir client al hash map");
            while (!sortir) {
                try {
                    if (this.br.ready()) {
                        this.lastMsg = this.br.readLine();
                        msg_area.setText(msg_area.getText().trim() + "\n"+this.clientName + ": '" + this.lastMsg + "'");
                        System.out.println(this.clientName + ": '" + this.lastMsg + "'");
                        if (this.lastMsg.equals("exit")) {
                            clients.remove(this.clientName);
                            System.out.println("s'elimina client del hash map");
                            for (User u : clients.values()) {
                                if (!u.clientName.equals(this.clientName)) {
                                    u.pw.print("\t\t>>" + this.clientName + " ha sortit del chat\n");
                                    u.pw.flush();
                                }
                            }
                            msg_area.setText(msg_area.getText().trim() + "\n"+this.clientName + " ha sortit del chat");
                            System.out.println(this.clientName + " ha sortit del chat");
                            sortir = true;
                        } else if (!this.lastMsg.equals("")) {
                            for (User u : clients.values()) {
                                if (!u.clientName.equals(this.clientName)) {
                                    u.pw.print("\t\t>>" + this.clientName + ": " + this.lastMsg + " \n");
                                    u.pw.flush();
                                }
                            }
                            System.out.println("s'envia " + this.lastMsg + "a tothom");
                            this.lastMsg = "";

                        }

                    }
                } catch (IOException e) {
                    System.out.println(e);
                }
            }
            this.pw.close();
            try {
                this.br.close();
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }
}
